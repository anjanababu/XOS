alias physicalSP S0;
physicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);

alias sysCallNo S1;
sysCallNo = [physicalSP-1];

alias argname S2;
argname = [physicalSP-3];

alias j S3;
alias flag S4;
alias index S5;
alias bindex S6;
alias count S7;
alias i S8;
alias k S11;
j=0;
flag=0;


if ( sysCallNo == 9) then

	while(j<64)do
		if([FAT+j*8]==argname) then 
			flag=1;
			index=j;
			break;

		endif;
		j=j+1;
	endwhile;

	if(flag==0) then
		[physicalSP-2]=-1;
		ireturn;
	endif;

	bindex=[FAT+j*8+2];
	load(1,bindex);
	count=[FAT+j*8+1]/512;
	
	index=0;
	if(count>3) then 
		[physicalSP-2]=-1;
		ireturn;
	endif;

	flag=0;
	j=0;
	i=0;
	while(j<3)do
		if([PTBR+j*2+1]=="01" || [PTBR+j*2+1]=="11")then
			[1280+[PTBR+j*2]]=[1280+[PTBR+j*2]]-1;
     
		else

			if([PTBR+j*2+1]=="00" && [PTBR+j*2]>=448)then
				[6*512+[PTBR+j*2]]= [6*512+[PTBR+j*2]]-1;

			endif;
		endif;
		j=j+1;
	endwhile;
 
	j=0;
	while(j<count)do
		[PTBR+j*2]=[1*512+j];
		[PTBR+j*2+1]="00";
		j=j+1;
	endwhile;
	i=count;
	while(i<3)do
		[PTBR+j*2]=-1;
		[PTBR+j*2+1]="00";
		i=i+1;
		j=j+1;
	endwhile;
	
	[PTBR+3*2+1]="01";  //stack

	alias currentPID S7;
	currentPID = (PTBR - 1024) / 8;
	
	alias currentPCB S8;
	currentPCB = READY_LIST + 32 * currentPID;

	i=0;
	while(i<8) do
		j=[currentPCB+i*2+15];
		if(j!=-1) then
			[currentPCB+i*2+15+1]=-1;
			[FILE_TABLE + j*2+1]=[FILE_TABLE + j*2+1]-1;

			if([FILE_TABLE + j*2+1]==0) then
				[FILE_TABLE + j*2+0]=-1;
			endif;
			[currentPCB+i*2+15]=-1;
		endif;
		i=i+1;

	endwhile;

	store(6,20);		
	SP=3*512;	
	physicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);
	[physicalSP]=0;
	ireturn;
endif;

if ( sysCallNo == 11) then
	alias currentPID S7;
	currentPID = (PTBR - 1024) / 8;
	[physicalSP-2]=currentPID;
	ireturn;
endif;
if ( sysCallNo == 12) then
	alias currentPID S7;
	currentPID = (PTBR - 1024) / 8;
	[physicalSP-2]=[READY_LIST+ currentPID*32+31];
	ireturn;
endif;

